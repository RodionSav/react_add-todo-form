{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","App","getUserById","usersFromServer","find","initialTodos","todosFromServer","useState","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","setTodos","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","newTodo","Math","max","prevTodo","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f50ed73.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  function getUserById(userId: number) {\n    return usersFromServer.find(user => user.id === userId)\n    || null;\n  }\n\n  const initialTodos = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const getMaxTodoId = () => {\n    return Math.max(...todos.map(todo => todo.id), 0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    setTitle(trimmedTitle);\n\n    setHasTitleError(!trimmedTitle);\n    setHasUserIdError(!userId);\n\n    if (!trimmedTitle || !userId) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getMaxTodoId() + 1,\n      title,\n      userId,\n      user: getUserById(userId),\n      completed: false,\n    };\n\n    setTodos(prevTodo => [...prevTodo, newTodo]);\n\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n            <input\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n            {hasTitleError\n            && <span className=\"error\">Please enter a title</span>}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">\n            User:\n            <select\n              name=\"select\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserIdChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {hasUserIdError\n            && <span className=\"error\">Please choose a user</span>}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}